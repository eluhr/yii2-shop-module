<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace eluhr\shop\models\base;

use Yii;

/**
 * This is the base-model class for table "sp_product".
 *
 * @property integer $id
 * @property string $title
 * @property integer $is_online
 * @property integer $rank
 * @property string $shipping_price
 * @property integer $staggering_shipping_cost
 * @property string $description
 * @property integer $popularity
 * @property bool $is_inventory_independent
 * @property string $created_at
 * @property string $updated_at
 *
 * @property \eluhr\shop\models\TagXProduct[] $tagXProducts
 * @property \eluhr\shop\models\Tag[] $tags
 * @property \eluhr\shop\models\Variant[] $variants
 * @property string $aliasModel
 */
abstract class Product extends \eluhr\shop\models\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'sp_product';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['title', 'rank','is_inventory_independent'], 'required'],
            [['is_online', 'rank', 'staggering_shipping_cost', 'popularity'], 'integer'],
            [['shipping_price'], 'number'],
            [['description'], 'string'],
            [['created_at', 'updated_at'], 'safe'],
            [['title'], 'string', 'max' => 80],
            [['title'], 'unique']
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('shop', 'ID'),
            'title' => Yii::t('shop', 'Title'),
            'is_online' => Yii::t('shop', 'Is Online'),
            'rank' => Yii::t('shop', 'Rank'),
            'shipping_price' => Yii::t('shop', 'Shipping Price'),
            'staggering_shipping_cost' => Yii::t('shop', 'Staggering Shipping Cost'),
            'description' => Yii::t('shop', 'Description'),
            'popularity' => Yii::t('shop', 'Popularity'),
            'is_inventory_independent' => Yii::t('shop', 'Is Inventory Independent'),
            'created_at' => Yii::t('shop', 'Created At'),
            'updated_at' => Yii::t('shop', 'Updated At'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getTagXProducts()
    {
        return $this->hasMany(\eluhr\shop\models\TagXProduct::className(), ['product_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getTags()
    {
        return $this->hasMany(\eluhr\shop\models\Tag::className(), ['id' => 'tag_id'])->viaTable('sp_tag_x_product', ['product_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getVariants()
    {
        return $this->hasMany(\eluhr\shop\models\Variant::className(), ['product_id' => 'id']);
    }


    
    /**
     * @inheritdoc
     * @return \eluhr\shop\models\query\ProductQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \eluhr\shop\models\query\ProductQuery(get_called_class());
    }


}
